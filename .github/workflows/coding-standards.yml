name: Coding Standards

on: [push, pull_request]

jobs:
  # Runs PHP coding standards checks.
  #
  # Violations are reported inline with annotations.
  #
  # Performs the following steps:
  # - Checks out the repository.
  # - Configures caching for Composer.
  # - Sets up PHP.
  # - Logs debug information.
  # - Installs Composer dependencies (from cache if possible).
  # - Logs PHP_CodeSniffer debug information.
  # - Runs PHPCS on the full codebase with warnings suppressed.
  # - Runs PHPCS on the `tests` directory without warnings suppressed.
  phpcs:
    name: PHP coding standards
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.3
          tools: composer, cs2pr

      - name: Log debug information
        run: |
          php --version
          composer --version

      - name: Install Composer dependencies
        run: |
          composer install --prefer-dist --no-suggest --no-progress --no-ansi --no-interaction
          echo "${PWD}/vendor/bin" >> $GITHUB_PATH

      - name: Log PHPCS debug information
        run: composer run lint -- -i

      - name: Run PHP compatibility tests
        run: composer run lint -- --standard=phpcompat.xml.dist -q --report=checkstyle | cs2pr

      - name: Run PHPCS on all plugin files
        run: composer run lint -- -q -n --report=checkstyle | cs2pr

  # Runs the JavaScript coding standards checks.
  #
  # Performs the following steps:
  # - Checks out the repository.
  # - Logs debug information about the runner container.
  # - Installs NodeJS
  # - Sets up caching for NPM.
  # - Logs updated debug information.
  # _ Installs NPM dependencies using install-changed to hash the `package.json` file.
  # - Run the Run ESLint checks.
  jshint:
    name: JavaScript coding standards
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node JS
        uses: actions/setup-node@v2
        with:
          node-version-file: '.nvmrc'

      - name: Cache NodeJS modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Log debug information
        run: |
          npm --version
          yarn --version
          node --version
          curl --version
          git --version
          locale -a

      - name: Install Dependencies
        run: npm install

      - name: Run ESLint
        run: yarn lint:js
