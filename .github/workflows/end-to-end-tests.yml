name: End-to-end Tests

on:
  push:
    branches:
      - development
  pull_request:
  # Once weekly On Sundays at 00:00 UTC.
  schedule:
    - cron: '0 0 * * 0'

env:
  WP_DEVELOP_DIR: ./wordpress
  GF_LICENSE: ${{ secrets.GF_LICENSE }}
  GH_CREDENTIALS: ${{ secrets.GH_CREDENTIALS }}

jobs:
  # Runs the end-to-end test suite.
  #
  # Performs the following steps:
  # - Cancels all previous workflow runs for pull requests that have not completed.
  # - Set environment variables.
  # - Checks out the repository.
  # - Logs debug information about the runner container.
  # - Installs NodeJS 1
  # - Sets up caching for NPM.
  # _ Installs NPM dependencies using install-changed to hash the `package.json` file.
  # - Builds WordPress to run from the `build` directory.
  # - Starts the WordPress Docker container.
  # - Logs general debug information.
  # - Logs the running Docker containers.
  # - Logs Docker debug information (about both the Docker installation within the runner and the WordPress container).
  # - Install WordPress within the Docker container.
  # - Run the E2E tests.
  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous runs of this workflow (pull requests only)
        if: ${{ github.event_name == 'pull_request' }}
        uses: styfle/cancel-workflow-action@0.5.0
        with:
          access_token: ${{ github.token }}

      - name: Configure environment variables
        run: |
          echo "PHP_FPM_UID=$(id -u)" >> $GITHUB_ENV
          echo "PHP_FPM_GID=$(id -g)" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v2

      # Docs: https://github.com/shivammathur/setup-php
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4

      - name: Setup Node JS
        uses: actions/setup-node@v2
        with:
          node-version-file: '.nvmrc'

      - name: Cache NodeJS modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Log debug information
        run: |
          npm --version
          yarn --version
          node --version
          curl --version
          git --version
          svn --version
          php --version
          php -i
          locale -a

      - name: Install Dependencies
        run: |
          npm install

      - name: Build Gravity PDF
        run: yarn build:production

      - name: Install / Setup Gravity PDF + WordPress
        run: |
          yarn env:install

      - name: Run E2E tests
        run: yarn test:e2e:headless

      - name: Dump log files on failure
        if: failure()
        run: |
          cp ./var/www/html/wp-content/debug.log screenshots/debug.log
          cp -R ./var/www/html/wp-content/uploads/gravity_forms/logs/ screenshots/logs/

      - name: Upload artifacts on failure
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: my-artifact
          path: screenshots/
