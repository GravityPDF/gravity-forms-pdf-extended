name: PHPUnit Tests

on:
  push:
    branches:
      - development
  pull_request:
  # Once weekly On Sundays at 00:00 UTC.
  schedule:
    - cron: '0 0 * * 0'

# Cancels all previous workflow runs for pull requests that have not completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name for pull requests
  # or the commit hash for any other events.
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true

env:
  WP_DEVELOP_DIR: ./wordpress
  GF_LICENSE: ${{ secrets.GF_LICENSE }}

jobs:
  # Runs the PHPUnit tests for WordPress.
  #
  # Performs the following steps:
  # - Set environment variables.
  # - Sets up the environment variables needed for testing with memcached (if desired).
  # - Downloads the built WordPress artifact from the previous job.
  # - Unzips the artifact.
  # - Installs NodeJS
  # - Sets up caching for NPM.
  # _ Installs NPM dependencies using install-changed to hash the `package.json` file.
  # - Configures caching for Composer.
  # _ Installs Composer dependencies (if desired).
  # - Logs Docker debug information (about both the Docker installation within the runner).
  # - Starts the WordPress Docker container.
  # - Starts the memcached server after the Docker network has been created (if desired).
  # - Logs WordPress Docker container debug information.
  # - Logs debug general information.
  # - Logs the running Docker containers.
  # - Logs debug information about what's installed within the WordPress Docker containers.
  # - Install WordPress within the Docker container.
  # - Run the PHPUnit tests.
  # - Reports test results to the Distributed Hosting Tests.
  test-php:
    name: ${{ matrix.php }}${{ matrix.multisite && ' multisite' || '' }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        php: [ '8.1', '8.0', '7.4', '7.3' ]
        os: [ ubuntu-latest ]
        multisite: [ false ]
        include:
          - php: '7.4'
            os: ubuntu-latest
            multisite: true
          - php: '7.4'
            os: ubuntu-latest
            multisite: false
            report: true
    env:
      WP_ENV_PHP_VERSION: ${{ matrix.php }}

    steps:
      - name: Configure environment variables
        run: |
          echo "PHP_FPM_UID=$(id -u)" >> $GITHUB_ENV
          echo "PHP_FPM_GID=$(id -g)" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v2

      # Docs: https://github.com/shivammathur/setup-php
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.3

      - name: Setup Node JS
        uses: actions/setup-node@v2
        with:
          node-version-file: '.nvmrc'

      - name: Cache NodeJS modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Log debug information
        run: |
          npm --version
          yarn --version
          node --version
          curl --version
          git --version
          svn --version
          php --version
          php -i
          locale -a

      - name: Install Dependencies
        run: npm install

      - name: Build Gravity PDF
        run: yarn build:production

      - name: Install / Setup Gravity PDF + WordPress
        run: |
          yarn env:install

      - name: Run PHPUnit tests
        run: yarn test:php --verbose
        continue-on-error: ${{ matrix.php == '8.1' }}

      # TODO: XDEBUG isnt working for unit tests https://github.com/WordPress/gutenberg/issues/42286
      - name: Run (xDebug) tests
        if: ${{ matrix.report }}
        run: |
          yarn run test:php --verbose --coverage-clover=tmp/coverage/report-xml/php-coverage1.xml
          yarn test:js:coverage
          bash <(curl -s https://codecov.io/bash);
