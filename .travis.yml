os: linux

language: shell

services:
  - docker

addons:
  artifacts:
    paths:
      - $(git ls-files -o screenshots | tr "\n" ":")
    target_paths:
      - /${TRAVIS_BUILD_NUMBER}/${TRAVIS_JOB_NUMBER}
  apt:
    sources:
      - sourceline: 'deb https://dl.yarnpkg.com/debian/ stable main'
        key_url: 'https://dl.yarnpkg.com/debian/pubkey.gpg'
      - sourceline: 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main'
        key_url: 'https://dl.google.com/linux/linux_signing_key.pub'
    packages:
      - docker-ce
      - yarn
      - google-chrome-stable

cache:
  yarn: true
  apt: true
  directories:
    - $HOME/.composer/cache
    - $HOME/.npm
    - $HOME/.nvm/.cache

env:
  global:
    - WP_DEVELOP_DIR: ./wordpress
    - INSTALL_COMPOSER: 0
    - INSTALL_WORDPRESS: true
    - LOCAL_WP_DEBUG: true
    - LOCAL_WP_DEBUG_LOG: true
    - LOCAL_WP_DEBUG_DISPLAY: false

before_install:
  - nvm install --lts
  - yarn global add gulp-cli && yarn
  - yarn prebuild:core-fonts $GITHUB_CREDENTIALS
  - |
    if [[ "$INSTALL_WORDPRESS" = "true" ]]; then
      # Upgrade docker-compose.
      sudo rm /usr/local/bin/docker-compose
      curl -sL https://github.com/docker/compose/releases/download/1.24.0/docker-compose-`uname -s`-`uname -m` > docker-compose
      chmod +x docker-compose
      sudo mv docker-compose /usr/local/bin
    fi

install:
  # Build Gravity PDF
  - yarn build:production
  - |
    if [[ "$INSTALL_WORDPRESS" = "true" ]]; then
      npm run env:install
      npm run env:install:phpunit
    fi
  - |
    if [[ "$INSTALL_COMPOSER" != "0" ]]; then
      bash ./bin/download-wordpress.sh
      bash ./bin/install-wordpress.sh
      npm run env connect
      if [[ "$INSTALL_COMPOSER" = "2" ]]; then
        npm run env docker-run -- php composer install --no-dev
      else
        npm run env docker-run -- php composer install
      fi
    fi

jobs:
  fast_finish: true

  include:
    - name: PHP Linting
      env: INSTALL_WORDPRESS=false INSTALL_COMPOSER=1
      script:
        - |
          npm run lint:php:format &&
          npm run lint:php

    - name: PHP Compatibility
      env: INSTALL_WORDPRESS=false INSTALL_COMPOSER=1
      script:
        - npm run env docker-run -- php composer compat

    - name: JS Linting
      env: INSTALL_WORDPRESS=false
      script:
        - npm run lint:js

    - name: E2E Testing
      env: LOCAL_PHP=7.4-fpm
      script:
        - npm run test:e2e:headless

    - name: PHP 7.4 unit tests
      env: LOCAL_PHP=7.4-fpm
      script:
        - |
          npm run test:php &&
          npm run test:php -- --group ajax

    - name: PHP 7.3 unit tests
      env: LOCAL_PHP=7.3-fpm
      script:
        - |
          npm run test:php && npm run test:php -- --group ajax &&
          npm run test:php:multisite && npm run test:php:multisite -- --group ajax

    - name: PHP 7.2 unit tests
      env: LOCAL_PHP=7.2-fpm
      script:
        - |
          npm run test:php &&
          npm run test:php -- --group ajax

    - name: PHP 7.1 unit tests
      env: LOCAL_PHP=7.1-fpm
      script:
        - |
          npm run test:php &&
          npm run test:php -- --group ajax

    - name: PHP 7.0 unit tests
      env: LOCAL_PHP=7.0-fpm
      script:
        - |
          npm run test:php &&
          npm run test:php -- --group ajax

    - name: PHP 5.6 unit tests
      env: LOCAL_PHP=5.6-fpm
      script:
        - |
          npm run test:php &&
          npm run test:php -- --group ajax

    - name: JS and PHP Coverage
      env: LOCAL_PHP=7.3-fpm LOCAL_PHP_XDEBUG=true
      script:
        - |
          npm run test:js:coverage &&
          npm run test:php -- --coverage-clover=tmp/coverage/report-xml/php-coverage1.xml &&
          npm run test:php -- --coverage-clover=tmp/coverage/report-xml/php-coverage2.xml --group ajax

    - stage: Deploy
      name: Package and Push to WordPress.org
      env: INSTALL_WORDPRESS=false LOCAL_PHP=5.6-fpm INSTALL_COMPOSER=2
      script:
        - |
          bash ./bin/package.sh $TRAVIS_TAG $TRAVIS_BRANCH &&
          bash ./bin/deploy.sh
      if: tag IS present

after_success:
  - |
    if [[ "$LOCAL_PHP_XDEBUG" = "true" ]]; then
      bash <(curl -s https://codecov.io/bash);
    fi

after_failure:
  - cat ./wordpress/src/wp-content/debug.log
  - cat ./wordpress/src/wp-content/uploads/gravity_forms/logs/*.txt
